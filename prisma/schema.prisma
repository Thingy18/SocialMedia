// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  connections  Connection[]  @relation("UserConnections")
  connectedTo  Connection[]  @relation("ConnectedUserConnections")
  posts        Post[]        @relation("UserPosts")
  readPosts    ReadPost[]
  comments     Comment[]     @relation("UserComments")
  attributes   Attribute[]   @relation("UserAttributes")
}


model Connection {
  id             Int    @id @default(autoincrement())
  userId         Int
  connectedToId  Int
  connectionType String
  user           User   @relation("UserConnections", fields: [userId], references: [id])
  connectedTo    User   @relation("ConnectedUserConnections", fields: [connectedToId], references: [id])
}


model Post {
  id         Int           @id @default(autoincrement())
  posterId   Int
  poster     User          @relation("UserPosts", fields: [posterId], references: [id])
  viewers    ReadPost[]
  comments   Comment[]
  content    String
  createdAt  DateTime      @default(now())
}

model Comment {
  id         Int       @id @default(autoincrement())
  posterId   Int
  postId     Int
  poster     User      @relation("UserComments", fields: [posterId], references: [id])
  post       Post      @relation(fields: [postId], references: [id])
  content    String
  createdAt  DateTime  @default(now())
}

model Attribute {
  id        Int    @id @default(autoincrement())
  type      String
  value     String
  userId    Int
  user      User   @relation("UserAttributes", fields: [userId], references: [id])
}

model ReadPost {
  id       Int   @id @default(autoincrement())
  userId   Int
  postId   Int
  user     User  @relation(fields: [userId], references: [id])
  post     Post  @relation(fields: [postId], references: [id])
}
